generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  role        Role     @default(ADMIN)
  status      UserStatus @default(ACTIVE)
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime?
  
  creator     User?    @relation("UserCreatedBy", fields: [createdBy], references: [id])
  createdUsers User[]  @relation("UserCreatedBy")
  sessions    Session[]
  activityLogs ActivityLog[]
  
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model ActivityLog {
  id         String   @id @default(cuid())
  userId     String
  action     String
  targetType String
  targetId   String?
  details    Json?
  ipAddress  String?
  userAgent  String?
  createdAt  DateTime @default(now())
  
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("activity_logs")
}

enum Role {
  SUPER_ADMIN
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}
